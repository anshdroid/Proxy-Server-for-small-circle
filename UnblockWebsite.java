/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proxyserver;
import java.util.HashMap;
import java.util.ArrayList;
import javax.swing.table.*;
import javax.swing.JOptionPane;
/**
 *
 * @author rajku
 */
public class UnblockWebsite extends javax.swing.JDialog implements Runnable{

    /**
     * Creates new form UnblockWebsite
     */
    int type ;
    public UnblockWebsite(java.awt.Frame parent, boolean modal, int type) {
        super(parent, modal);
        initComponents();
        this.type = type;
       if(this.type == 0) {
           JTableHeader header = websiteTable.getTableHeader();
           websiteTable.getColumnModel().getColumn(1).setHeaderValue("Website IP");
           websiteTable.getColumnModel().getColumn(2).setHeaderValue("Website URL");
           ipLabel.setText("Enter website IP to Unblock: ");
           titleLabal.setText("Blocked Websites  - Proxy Server");
           header.repaint();
           setWebsiteTable();
           
       } else {
           JTableHeader header = websiteTable.getTableHeader();
           websiteTable.getColumnModel().getColumn(1).setHeaderValue("Client IP");
           websiteTable.getColumnModel().getColumn(2).setHeaderValue("Client Name");
           ipLabel.setText("Enter Client IP to Unblock: ");
           titleLabal.setText("Blocked Clients  - Proxy Server");
           header.repaint();
           setClientTable();
       }
    }
    
    public void setWebsiteTable() {
        HashMap<String, String> tempWebsites = Proxy.blockedSites;
        ((DefaultTableModel)websiteTable.getModel()).setRowCount(0);
        int count = 0;
        for (String key : tempWebsites.keySet()) {
            String[] array = new String[3];
            array[0] = Integer.toString(count+1);
            array[1] = key;
            array[2] = tempWebsites.get(key);
            count += 1;
            ((DefaultTableModel)websiteTable.getModel()).addRow(array);
        }
    }
    
    public void setClientTable() {
        HashMap<String, String> tempClients = Proxy.blockedClients;
        ((DefaultTableModel)websiteTable.getModel()).setRowCount(0);
        int count = 0;
        for (String key : tempClients.keySet()) {
            System.out.println(tempClients.get(key));
            String[] array = new String[3];
            array[0] = Integer.toString(count+1);
            array[1] = key;
            array[2] = tempClients.get(key);
            count += 1;
            ((DefaultTableModel)websiteTable.getModel()).addRow(array);
        }
    }
    
    public void run() {
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        websiteTable = new javax.swing.JTable();
        ipLabel = new javax.swing.JLabel();
        ipEdit = new javax.swing.JTextField();
        unblockButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabal.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        titleLabal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabal.setText("Blocked Websites  - Proxy Server");

        websiteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "S.NO", "Website IP", "Website"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(websiteTable);

        ipLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ipLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ipLabel.setText("Enter website IP to Unblock: ");

        ipEdit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        unblockButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        unblockButton.setText("Unblock!");
        unblockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unblockButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ipLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ipEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unblockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabal, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ipLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ipEdit)
                    .addComponent(unblockButton, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unblockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unblockButtonActionPerformed
        // search if data is in hashmap
        if (this.type == 0) {
            String ip = ipEdit.getText();
        if(Proxy.blockedSites.get(ip) != null) {
            Proxy.blockedSites.remove(ip);
            setWebsiteTable();
            
        } else {
            JOptionPane.showMessageDialog(this, "<html><h3>Website not Blocked!</h3><p>Please enter ip of blocked website!</p></html>", 
                    "Unblock a Website Error - Proxy", JOptionPane.INFORMATION_MESSAGE);
        }
        } else {
            String ip = ipEdit.getText();
        if(Proxy.blockedClients.get(ip) != null) {
            Proxy.blockedClients.remove(ip);
            setClientTable();
            
        } else {
            JOptionPane.showMessageDialog(this, "<html><h3>Client not Blocked!</h3><p>Please enter ip of blocked client!</p></html>", 
                    "Unblock a Website Error - Proxy", JOptionPane.INFORMATION_MESSAGE);
        }
        }
    }//GEN-LAST:event_unblockButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ipEdit;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel titleLabal;
    private javax.swing.JButton unblockButton;
    private javax.swing.JTable websiteTable;
    // End of variables declaration//GEN-END:variables
}
